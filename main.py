import os
import telebot
from flask import Flask, request
import openai

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–ª—é—á—ñ–≤
BOT_TOKEN = os.getenv("TELEGRAM_API_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)
openai.api_key = OPENAI_API_KEY

# Webhook endpoint
@app.route('/', methods=['POST', 'GET'])
def webhook():
    if request.method == 'POST':
        json_str = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_str)
        bot.process_new_updates([update])
        return 'ok', 200
    return 'Woofer Webhook OK', 200

# /start
@bot.message_handler(commands=['start'])
def start_handler(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç! –Ø Woofer Bot ü§ñ –î–æ–ø–æ–º–æ–∂—É –∑ TikTok, GPT —ñ –∫—Ä–µ–∞—Ç–∏–≤–æ–º –¥–ª—è SMM!")

# /help
@bot.message_handler(commands=['help'])
def help_handler(message):
    commands = "/start ‚Äî –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è\n/help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n/ping ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞\n/report ‚Äî —ñ–¥–µ—è –≤—ñ–¥ GPT\n(–ù–∞–ø–∏—à–∏ —â–æ—Å—å —ñ —è –≤—ñ–¥–ø–æ–≤—ñ–º)"
    bot.send_message(message.chat.id, commands)

# /ping
@bot.message_handler(commands=['ping'])
def ping_handler(message):
    bot.send_message(message.chat.id, "pong üèì")

# /report ‚Äî –≤–∏–ø–∞–¥–∫–æ–≤–∏–π GPT-–ø–æ—Å—Ç
@bot.message_handler(commands=['report'])
def report_handler(message):
    try:
        reply = get_gpt_response("–ü—Ä–∏–¥—É–º–∞–π —â–æ—Å—å —Ü—ñ–∫–∞–≤–µ –∞–±–æ –∞–±—Å—É—Ä–¥–Ω–µ –¥–ª—è SMM TikTok –ø—Ä–æ —Å–æ–±–∞–∫-–∫—É—Ö–∞—Ä—ñ–≤")
        bot.send_message(message.chat.id, reply)
    except Exception:
        bot.send_message(message.chat.id, "‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ GPT")

# GPT-–≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ —Ç–µ–∫—Å—Ç
@bot.message_handler(func=lambda message: True)
def gpt_response(message):
    try:
        reply = get_gpt_response(message.text)
        bot.send_message(message.chat.id, reply)
    except Exception:
        bot.send_message(message.chat.id, "üò¢ –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ GPT.")

# GPT-–ª–æ–≥—ñ–∫–∞
def get_gpt_response(prompt):
    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[{"role": "user", "content": prompt}],
        timeout=10  # –±–µ–∑–ø–µ—á–Ω–∏–π —Ç–∞–π–º–∞—É—Ç
    )
    return response.choices[0].message.content.strip()

if __name__ == '__main__':
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))

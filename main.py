from flask import Flask, request
import telebot
import os
import openai

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ç–æ–∫–µ–Ω—ñ–≤
TOKEN = os.getenv("TELEGRAM_API_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# GPT-–∫–ª—ñ—î–Ω—Ç
openai.api_key = OPENAI_API_KEY

@app.route('/', methods=['POST'])
def webhook():
    json_str = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return 'ok', 200

# /start
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç! –Ø Woofer Bot ‚Äî –¥–æ–ø–æ–º–æ–∂—É –∑ TikTok üå≠")

# /help
@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id, "/start /help /ping /today /report\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —â–æ—Å—å ‚Äî —è –≤—ñ–¥–ø–æ–≤—ñ–º üß†")

# /ping
@bot.message_handler(commands=['ping'])
def ping_message(message):
    bot.send_message(message.chat.id, "pong üèì")

# /report ‚Äî —â–æ—Å—å –≤–∏–ø–∞–¥–∫–æ–≤–µ –∑ GPT
@bot.message_handler(commands=['report'])
def report_message(message):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[{"role": "user", "content": "–ü—Ä–∏–¥—É–º–∞–π —â–æ—Å—å —Ü—ñ–∫–∞–≤–µ –∞–±–æ –∞–±—Å—É—Ä–¥–Ω–µ –¥–ª—è SMM TikTok –ø—Ä–æ —Å–æ–±–∞–∫-–∫—É—Ö–∞—Ä—ñ–≤"}]
        )
        reply = response.choices[0].message.content
        bot.send_message(message.chat.id, reply)
    except Exception as e:
        bot.send_message(message.chat.id, "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —ñ–¥–µ—ó üò¢")

# –û–±—Ä–æ–±–∫–∞ –∑–≤–∏—á–∞–π–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (GPT-—á–∞—Ç)
@bot.message_handler(func=lambda message: True)
def gpt_chat(message):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[{"role": "user", "content": message.text}]
        )
        reply = response.choices[0].message.content
        bot.send_message(message.chat.id, reply)
    except Exception as e:
        bot.send_message(message.chat.id, "–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫ –∑ GPT üò¢")

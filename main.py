from flask import Flask, request
import telebot
import os
import openai
import logging

# –õ–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
TOKEN = os.getenv("TELEGRAM_API_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)
openai.api_key = OPENAI_API_KEY

# –í–µ–±—Ö—É–∫
@app.route('/', methods=['POST'])
def webhook():
    json_str = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return 'ok', 200

# /start
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç! –Ø Woofer Bot ‚Äî TikTok SMM –ø–æ–º—ñ—á–Ω–∏–∫ üê∂")

# /help
@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id, "/start /help /ping /report /today ‚Äî –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —â–æ—Å—å, —ñ —è –≤—ñ–¥–ø–æ–≤—ñ–º!")

# /ping
@bot.message_handler(commands=['ping'])
def ping_message(message):
    bot.send_message(message.chat.id, "pong üèì")

# /report
@bot.message_handler(commands=['report'])
def report_message(message):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[{"role": "user", "content": "–ü—Ä–∏–¥—É–º–∞–π —â–æ—Å—å —Å–º—ñ—à–Ω–µ –∞–±–æ –∞–±—Å—É—Ä–¥–Ω–µ –¥–ª—è TikTok –∑ –ø–µ—Å–∏–∫–∞–º–∏-–∫—É—Ö–∞—Ä—è–º–∏"}],
            timeout=15  # —Ç–∞–π–º–∞—É—Ç
        )
        reply = response.choices[0].message.content
        bot.send_message(message.chat.id, reply)
    except Exception as e:
        logging.error(f"GPT –ø–æ–º–∏–ª–∫–∞: {e}")
        bot.send_message(message.chat.id, "GPT –ø–æ–º–∏–ª–∫–∞ üò¢")

# –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –±—É–¥—å-—è–∫–µ —ñ–Ω—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
@bot.message_handler(func=lambda message: True)
def gpt_chat(message):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[{"role": "user", "content": message.text}],
            timeout=15
        )
        reply = response.choices[0].message.content
        bot.send_message(message.chat.id, reply)
    except Exception as e:
        logging.error(f"GPT –ø–æ–º–∏–ª–∫–∞: {e}")
        bot.send_message(message.chat.id, "GPT –ø–æ–º–∏–ª–∫–∞ üò¢")
